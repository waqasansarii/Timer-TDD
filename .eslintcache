[{"C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\index.tsx":"1","C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\reportWebVitals.ts":"2","C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\App.tsx":"3","C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\component\\timer.tsx":"4"},{"size":500,"mtime":1607260317666,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1607260317666,"results":"7","hashOfConfig":"6"},{"size":225,"mtime":1609339670374,"results":"8","hashOfConfig":"6"},{"size":2490,"mtime":1609397179839,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"dushbv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\index.tsx",[],["20","21"],"C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\reportWebVitals.ts",[],"C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\App.tsx",[],"C:\\Users\\MS Computer\\OneDrive\\Desktop\\react counter TDD\\myapp\\src\\component\\timer.tsx",["22"],"import React, { useEffect, useState } from 'react'\r\nimport './timer.css'\r\n\r\n\r\nconst Timer = () => {\r\n\r\n\r\n    let [sec, setSec] = useState<number>(0)\r\n    let [min, setMin] = useState<number>(0)\r\n    let [hour, setHour] = useState<number>(0)\r\n    let [inter, setInter] = useState<number>(0)\r\n    let [on, setOn] = useState(false)\r\n\r\n\r\n    const startTimer = () => {\r\n\r\n        var set: any = setInterval((): void => {\r\n            if (sec === 59) {\r\n                setMin(++min)\r\n                sec = 0\r\n\r\n            }\r\n            if (min === 59) {\r\n                setHour(++hour)\r\n                min = 0\r\n            }\r\n            else {\r\n                setSec(++sec)\r\n            }\r\n        }, 1000)\r\n        setInter(set)\r\n        setOn(true)\r\n        console.log(set)\r\n\r\n    }\r\n    const handleStop = () => {\r\n        setOn(false)\r\n        console.log(inter)\r\n        clearInterval(inter)\r\n        console.log('stopp')\r\n    }\r\n    const hnadleReset = () => {\r\n        clearInterval(inter)\r\n        setHour(0); setMin(0); setSec(0)\r\n        console.log('reset')\r\n        setOn(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div data-testid=\"timer\">\r\n            <div>\r\n                <h1>Timer App</h1>\r\n            </div>\r\n            <div id=\"clockdiv\">\r\n                <div  >\r\n                    <span data-testid='value1' className=\"hours\">{hour === 0 ? '00' : hour}</span>\r\n                    <div className=\"smalltext\">Hours</div>\r\n                </div>\r\n                <div>\r\n                    <span data-testid='value' className=\"minutes\">{min === 0 ? '00' : min}</span>\r\n                    <div className=\"smalltext\">Minutes</div>\r\n                </div>\r\n                <div>\r\n                    <span data-testid='sec' className=\"seconds\">{sec === 0 ? '00' : sec}</span>\r\n                    <div className=\"smalltext\">Seconds</div>\r\n                </div>\r\n            </div>\r\n            <div >\r\n                {!on?\r\n                    <div className='btn_div'>\r\n                        <button className='start'  onClick={startTimer} data-testid='start'>start</button>\r\n                    </div>\r\n                    :\r\n                    <div className='btn_div'>\r\n                        <button className='stop' onClick={handleStop}>stop</button>\r\n                        <button className='reset' onClick={hnadleReset}>reset</button>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Timer",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":26},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]